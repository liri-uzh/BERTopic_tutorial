# -*- coding: utf-8 -*-
"""BERTopic_tutorial.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1JcAUfgCb1GpS8TBAXO-HBIa0vqlzr2Cb

# BERTopic tutorial
"""

# Load packages

import os
os.environ["TOKENIZERS_PARALLELISM"] = "false"

import pandas as pd
!pip install bertopic
from bertopic import BERTopic

# load dataset
data = pd.read_csv('/content/241217_dho_messages_prep.txt')

# Extract the 'utterance' column
utterances = data['utterance'].astype(str).tolist()

# Create and fit the BERTopic model
#topic_model = BERTopic()  # set number of topics automatically
topic_model = BERTopic(min_topic_size=100) # set maximum number of topics

topics, probs = topic_model.fit_transform(utterances)

# Display the topics
print(topic_model.get_topic_info())

# optional: merge similar topics after fitting model

reduced_topics = topic_model.reduce_topics(utterances, nr_topics=50)
topics = reduced_topics

# display top words for each topic

topics = topic_model.get_topics()
topic_list = []

for topic_num, words in topics.items():
    word_list = ", ".join([word for word, _ in words[:10]])  # Display top 10 words
    topic_list.append({"Topic": topic_num, "Top Words": word_list})

df_topics = pd.DataFrame(topic_list)
print(df_topics.shape)
print(df_topics.head(20))

# Visualize topic distance map

topic_model.visualize_topics()

# Visualize word importance for top n topics

topic_model.visualize_barchart(top_n_topics=10)

# Visualize topic similarity matrix

topic_model.visualize_heatmap()

